{"ast":null,"code":"import _objectSpread from\"/Users/omaradhamabouzeid/Documents/JS/React/movie-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/omaradhamabouzeid/Documents/JS/React/movie-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Profile(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var _useState3=useState({firstName:props.userData.firstName,lastName:props.userData.lastName,email:props.userData.email,password:props.userData.password}),_useState4=_slicedToArray(_useState3,2),updatedInfo=_useState4[0],setUpdatedInfo=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),updateStatus=_useState6[0],setUpdateStatus=_useState6[1];function updateUserInfo(){/**\n         * Patch request to the server to update user info\n         */var data=_objectSpread(_objectSpread({},updatedInfo),{},{oldEmail:props.userData.email});console.log(data);fetch(\"https://movieapp-rget.onrender.com/updateUser\",{method:\"PATCH\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(data)}).then(function(res){return res.json();}).then(function(data){console.log(data);if(data.result===\"success\"){setUpdateStatus('success');setEditing(false);props.updateUserData(updatedInfo);}else{setUpdateStatus('Failed to update');}});}function validate(){/**\n        * some validations for the signup\n        */var isAlpha=function isAlpha(str){return /^[a-zA-Z]*$/.test(str);};var isPassword=function isPassword(str){return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(str);};if(!isAlpha(updatedInfo.firstName)||updatedInfo.firstName.trim(' ')===''){setUpdateStatus('Enter a valid First name.');}else if(!isAlpha(updatedInfo.lastName)||updatedInfo.lastName.trim(' ')===''){setUpdateStatus('Enter a valid last name.');}else if(updatedInfo.email.indexOf('@')===-1||updatedInfo.email.indexOf('.')===-1){setUpdateStatus('Enter a valid email address.');}else if(!isPassword(updatedInfo.password)){setUpdateStatus(/*#__PURE__*/_jsxs(\"span\",{className:\"pw-rules\",children:[\"Password needs to match these rules: \",/*#__PURE__*/_jsx(\"br\",{}),\"- Minimum eight characters \",/*#__PURE__*/_jsx(\"br\",{}),\"- At least one uppercase letter \",/*#__PURE__*/_jsx(\"br\",{}),\"- At least one lowercase letter \",/*#__PURE__*/_jsx(\"br\",{}),\"- One number \",/*#__PURE__*/_jsx(\"br\",{}),\"- One special character\"]}));}// check if email has changed \nelse if(props.userData.email!==updatedInfo.email){/**\n             * Check if email already exists in the DB\n             */fetch(\"https://movieapp-rget.onrender.com/user/\".concat(updatedInfo.email)).then(function(res){return res.json();}).then(function(data){if(data!==null){setUpdateStatus('This email is already in use.');}else{updateUserInfo();}});}else{updateUserInfo();}}return/*#__PURE__*/_jsx(\"div\",{className:\"form-box\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"form\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"subtitle\",children:\"Account details.\"}),updateStatus!==''&&updateStatus!=='success'&&/*#__PURE__*/_jsx(\"p\",{className:\"update-failed\",children:updateStatus}),updateStatus==='success'&&/*#__PURE__*/_jsx(\"p\",{className:\"update-successful\",children:\"Successfully Updated!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-container\",children:/*#__PURE__*/_jsxs(\"fieldset\",{disabled:!editing,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input\",placeholder:\"First Name\",value:updatedInfo.firstName,onChange:function onChange(e){return setUpdatedInfo(_objectSpread(_objectSpread({},updatedInfo),{},{firstName:e.target.value}));}}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"input\",placeholder:\"Last Name\",value:updatedInfo.lastName,onChange:function onChange(e){return setUpdatedInfo(_objectSpread(_objectSpread({},updatedInfo),{},{lastName:e.target.value}));}}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"input\",placeholder:\"Email\",value:updatedInfo.email,onChange:function onChange(e){return setUpdatedInfo(_objectSpread(_objectSpread({},updatedInfo),{},{email:e.target.value}));}}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",className:\"input\",placeholder:\"Password\",value:updatedInfo.password,onChange:function onChange(e){return setUpdatedInfo(_objectSpread(_objectSpread({},updatedInfo),{},{password:e.target.value}));}})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){props.updateUserData(null);props.updateCurrentPage('signIn');},children:\"Sign out\"}),!editing&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return setEditing(true);},children:\"Edit profile\"}),editing&&/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){e.preventDefault();validate();},children:\"Save changes\"})]})});}","map":{"version":3,"names":["useState","Profile","props","editing","setEditing","firstName","userData","lastName","email","password","updatedInfo","setUpdatedInfo","updateStatus","setUpdateStatus","updateUserInfo","data","oldEmail","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","result","updateUserData","validate","isAlpha","str","test","isPassword","trim","indexOf","e","target","value","updateCurrentPage","preventDefault"],"sources":["/Users/omaradhamabouzeid/Documents/JS/React/movie-app/client/src/Profile.jsx"],"sourcesContent":["import {useState} from 'react'\n\nexport default function Profile(props){\n\n\n    const [editing, setEditing] = useState(false)\n    const [updatedInfo, setUpdatedInfo] = \n    useState({\n            firstName: props.userData.firstName, \n            lastName: props.userData.lastName, \n            email: props.userData.email, \n            password: props.userData.password\n            })\n    const [updateStatus, setUpdateStatus] = useState('')\n\n    function updateUserInfo(){\n        /**\n         * Patch request to the server to update user info\n         */\n        const data = {...updatedInfo, oldEmail: props.userData.email}\n        console.log(data)\n        fetch(\"https://movieapp-rget.onrender.com/updateUser\", {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data)\n            if (data.result === \"success\"){\n                setUpdateStatus('success')\n                setEditing(false)\n                props.updateUserData(updatedInfo)\n            }else {\n                setUpdateStatus('Failed to update')\n            }\n        })\n    }\n\n\n    function validate(){\n\n        /**\n        * some validations for the signup\n        */\n        const isAlpha = str => /^[a-zA-Z]*$/.test(str)\n        const isPassword = str => /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(str)\n        if (!isAlpha(updatedInfo.firstName) || updatedInfo.firstName.trim(' ') === ''){\n            setUpdateStatus('Enter a valid First name.')\n        }else if(!isAlpha(updatedInfo.lastName) || updatedInfo.lastName.trim(' ') === ''){\n            setUpdateStatus('Enter a valid last name.')\n        }else if(updatedInfo.email.indexOf('@') === -1 || updatedInfo.email.indexOf('.') === -1){\n            setUpdateStatus('Enter a valid email address.')\n        }\n        else if(!isPassword(updatedInfo.password)){\n            setUpdateStatus(<span className=\"pw-rules\">Password needs to match these rules: <br></br>\n                                                        - Minimum eight characters <br></br>\n                                                        - At least one uppercase letter <br></br>\n                                                        - At least one lowercase letter <br></br>\n                                                        - One number <br></br>\n                                                        - One special character</span>)\n        }\n        // check if email has changed \n        else if(props.userData.email !== updatedInfo.email){\n            /**\n             * Check if email already exists in the DB\n             */\n            fetch(`https://movieapp-rget.onrender.com/user/${updatedInfo.email}`)\n            .then(res => res.json())\n            .then(data => {\n                if (data !== null){\n                    setUpdateStatus('This email is already in use.')\n                }else {\n                    updateUserInfo()\n                }   \n                })\n        }else {\n            updateUserInfo()\n        }\n    }\n\n\n    return (\n        <div className=\"form-box\">\n                <form className=\"form\">\n                    <span className=\"subtitle\">Account details.</span>\n                    {((updateStatus !== '') && (updateStatus !== 'success')) && <p className=\"update-failed\">{updateStatus}</p>}\n                    {(updateStatus === 'success') && <p className=\"update-successful\">Successfully Updated!</p>}\n                    <div className=\"form-container\">\n                        <fieldset disabled={!editing}>\n                            <input type=\"text\" className=\"input\"  placeholder=\"First Name\" value={updatedInfo.firstName} onChange={(e) => setUpdatedInfo({...updatedInfo, firstName: e.target.value})}></input>\n                            <input type=\"text\" className=\"input\"  placeholder=\"Last Name\"  value={updatedInfo.lastName} onChange={(e) => setUpdatedInfo({...updatedInfo, lastName: e.target.value})}></input>\n                            <input type=\"email\" className=\"input\"  placeholder=\"Email\"  value={updatedInfo.email} onChange={(e) => setUpdatedInfo({...updatedInfo, email: e.target.value})}></input>\n                            <input type=\"password\" className=\"input\"  placeholder=\"Password\" value={updatedInfo.password} onChange={(e) => setUpdatedInfo({...updatedInfo, password: e.target.value})}></input>\n                        </fieldset>\n                    </div>\n                    <button onClick={() => {\n                        props.updateUserData(null)\n                        props.updateCurrentPage('signIn')\n                        }}>Sign out</button>\n                    {!editing && <button onClick={() => setEditing(true)}>Edit profile</button>}\n                    {editing && <button onClick={(e) =>{ \n                        e.preventDefault()\n                        validate()\n                    }}>Save changes</button>} \n                </form>                \n            </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}