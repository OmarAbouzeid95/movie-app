{"ast":null,"code":"var _jsxFileName = \"/Users/omaradhamabouzeid/Documents/JS/React/movie-app/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Header from './Header';\nimport Movie from './Movie';\nimport MovieDetails from './MovieDetails';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport Profile from './Profile';\nimport { apiKey, baseUrl, posterPath } from \"./info.js\";\nimport defaultPoster from \"./media/defaultPoster.png\";\nimport closeIcon from \"./media/close-icon.png\";\nimport Caroussel from './Caroussel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [mode, setMode] = useState('movie');\n  const [currentSearch, setCurrentSearch] = useState(\"\");\n  const [movieDetails, setMovieDetails] = useState({\n    active: false,\n    id: null,\n    visible: false\n  });\n  const [userData, setUserData] = useState(null);\n  const [currentPage, setCurrentPage] = useState('homepage');\n  const [loadHomepage, setLoadHomepage] = useState(true);\n  const [actionMovies, setActionMovies] = useState([]);\n  const [comedyMovies, setComedyMovies] = useState([]);\n  const [comedyTv, setComedyTv] = useState([]);\n  const [fantasyMovies, setFantasyMovies] = useState([]);\n  const [crimeMovies, setCrimeMovies] = useState([]);\n  const [dramaMovies, setDramaMovies] = useState([]);\n  const [dramaTv, setDramaTv] = useState([]);\n  const [animationTv, setAnimationTv] = useState([]);\n  const [documentaryTv, setDocumentaryTv] = useState([]);\n  const [mysteryTv, setMysteryTv] = useState([]);\n  const [serverConnection, setServerConnection] = useState(false);\n  useEffect(() => {\n    /**\n     * Activating server by sending multiple requests when the page loads until one is resolved\n     */\n    for (let i = 0; i < 2; i++) {\n      fetch('https://movieapp-rget.onrender.com/user/Omar').then(res => {\n        if (res.status === 200) setServerConnection(true);\n      });\n    }\n    /*\n    Fetching movies and tv by genre to display on the homepage\n    */\n    if (loadHomepage) {\n      //Action movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=28`).then(res => res.json()).then(data => {\n        console.log(\"Action genre\");\n        console.log(data);\n        setActionMovies(data.results);\n      });\n      // Comedy movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=35`).then(res => res.json()).then(data => {\n        console.log(\"comedy genre\");\n        console.log(data);\n        setComedyMovies(data.results);\n      });\n      // Comedy Tv\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=35`).then(res => res.json()).then(data => {\n        console.log(\"comedy genre\");\n        console.log(data);\n        setComedyTv(data.results);\n      });\n      // Comedy Tv\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=9648`).then(res => res.json()).then(data => {\n        console.log(\"mystery genre\");\n        console.log(data);\n        setMysteryTv(data.results);\n      });\n      // Fantasy movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=14`).then(res => res.json()).then(data => {\n        console.log(\"fantasy genre\");\n        console.log(data);\n        setFantasyMovies(data.results);\n      });\n      // Crime movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=80`).then(res => res.json()).then(data => {\n        console.log(\"crime genre\");\n        console.log(data);\n        setCrimeMovies(data.results);\n      });\n      // Drama movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=18`).then(res => res.json()).then(data => {\n        console.log(\"drama genre\");\n        console.log(data);\n        setDramaMovies(data.results);\n      });\n      // Drama Tv\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=18`).then(res => res.json()).then(data => {\n        console.log(\"drama genre\");\n        console.log(data);\n        setDramaTv(data.results);\n      });\n      // Animation TV\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=16`).then(res => res.json()).then(data => {\n        console.log(\"Animation genre\");\n        console.log(data);\n        setAnimationTv(data.results);\n      });\n      // Documentary TV\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=99`).then(res => res.json()).then(data => {\n        console.log(\"documentary genre\");\n        console.log(data);\n        setDocumentaryTv(data.results);\n      });\n      setLoadHomepage(false);\n    }\n    if (currentPage === 'trending') {\n      fetch(`${baseUrl}/trending/all/day?api_key=${apiKey}`).then(res => res.json()).then(data => {\n        console.log(\"trending\");\n        console.log(data);\n        setMovies(data.results);\n      });\n      setCurrentSearch(\"Trending\");\n      setCurrentPage('display');\n    } else if (currentPage === 'upcoming') {\n      fetch(`${baseUrl}/${mode}/upcoming?api_key=${apiKey}&language=en-US`).then(res => res.json()).then(data => {\n        console.log(\"upcoming\");\n        console.log(data);\n        setMovies(data.results);\n      });\n      setCurrentSearch(\"Upcoming\");\n      setCurrentPage('display');\n    } else if (currentPage === 'topRated') {\n      fetch(`${baseUrl}/${mode}/top_rated?api_key=${apiKey}&language=en-US`).then(res => res.json()).then(data => {\n        console.log(\"top rated\");\n        console.log(data);\n        setMovies(data.results);\n      });\n      setCurrentSearch(\"Top rated\");\n      setCurrentPage('display');\n    } else if (currentPage === 'popular') {\n      fetch(`${baseUrl}/${mode}/popular?api_key=${apiKey}&language=en-US`).then(res => res.json()).then(data => {\n        console.log(\"popular\");\n        console.log(data);\n        setMovies(data.results);\n      });\n      setCurrentSearch(\"Popular\");\n      setCurrentPage('display');\n    } else if (search !== '') {\n      console.log(\"in search\");\n      fetch(`${baseUrl}/search/${mode}?api_key=${apiKey}&language=en-US&query=${search}`).then(res => res.json()).then(data => {\n        console.log(data);\n        setMovies(data.results);\n      });\n      setCurrentSearch(search);\n      setSearch(\"\");\n      setCurrentPage('display');\n    } else if (movieDetails.active) {\n      fetch(`${baseUrl}/${mode}/${movieDetails.id}/credits?api_key=${apiKey}&language=en-US`).then(res => res.json()).then(data => {\n        console.log(data);\n        setMovieDetails({\n          ...movieDetails,\n          cast: data.cast,\n          active: false,\n          visible: true\n        });\n      });\n    }\n  }, [search, movieDetails, mode, currentPage, currentSearch, loadHomepage, serverConnection]);\n  const allMovies = movies.map(movie => {\n    if (currentSearch === 'Trending') {\n      if (movie.media_type === mode) {\n        return /*#__PURE__*/_jsxDEV(Movie, {\n          title: movie.title !== undefined ? movie.title : movie.name,\n          poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n          id: movie.id,\n          getMovieCast: getMovieCast,\n          genres: movie.genre_ids,\n          movieList: \"all\"\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 18\n        }, this);\n      } else {\n        return '';\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Movie, {\n        title: movie.title !== undefined ? movie.title : movie.name,\n        poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n        id: movie.id,\n        getMovieCast: getMovieCast,\n        genres: movie.genre_ids,\n        movieList: \"all\"\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 16\n      }, this);\n    }\n  });\n  const actionMoviesList = actionMovies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"action\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 14\n    }, this);\n  });\n  const comedyMoviesList = comedyMovies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"comedy\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 14\n    }, this);\n  });\n  const comedyTvList = comedyTv.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"comedy\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 14\n    }, this);\n  });\n  const fantasyMoviesList = fantasyMovies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"fantasy\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 14\n    }, this);\n  });\n  const crimeMoviesList = crimeMovies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"crime\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 14\n    }, this);\n  });\n  const dramaMoviesList = dramaMovies.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"drama\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 14\n    }, this);\n  });\n  const dramaTvList = dramaTv.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"drama\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 14\n    }, this);\n  });\n  const animationTvList = animationTv.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"animation\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 14\n    }, this);\n  });\n  const documentaryTvList = documentaryTv.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"documentary\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 14\n    }, this);\n  });\n  const mysteryTvList = mysteryTv.map(movie => {\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      title: movie.title !== undefined ? movie.title : movie.name,\n      poster: movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path,\n      id: movie.id,\n      getMovieCast: getMovieCast,\n      genres: movie.genre_ids,\n      movieList: \"mystery\"\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 14\n    }, this);\n  });\n  function searchMovies(text) {\n    if (text.trim() !== \"\") setCurrentPage('search');\n    setSearch(text);\n  }\n  function toggleMode() {\n    if (mode === \"movie\") {\n      setMode(\"tv\");\n    } else {\n      setMode(\"movie\");\n    }\n    updateCurrentPage('trending');\n  }\n  function getMovieCast(id, movieList) {\n    console.log(id);\n    console.log(movieList);\n    let videoPath = '';\n    let reviews = [];\n    let dbRating = 0.0;\n    let dbRatingCount = 0;\n    let dbRatingTotal = 0;\n    // Get movie trailer\n    fetch(`${baseUrl}/${mode}/${id}/videos?api_key=${apiKey}&language=en-US`).then(res => res.json()).then(data => {\n      for (let i = 0; i < data.results.length; i++) {\n        if (data.results[i].type === \"Trailer\") {\n          videoPath = `https://www.youtube.com/embed/${data.results[i].key}`;\n          break;\n        }\n      }\n      /**\n       * fetching movie reviews from the DB\n       */\n      fetch(`https://movieapp-rget.onrender.com/movies/${id}`).then(res => res.json()).then(data => {\n        if (data !== null) {\n          console.log(data);\n          reviews = data.reviews;\n          dbRating = data.rating;\n          dbRatingCount = data.ratingCount;\n          dbRatingTotal = data.ratingTotal;\n        }\n        // setting array to search from and fetch movie details of the clicked movie\n        let moviesArray = [];\n        switch (movieList) {\n          case \"action\":\n            moviesArray = actionMovies;\n            break;\n          case \"comedy\":\n            moviesArray = mode === 'tv' ? comedyTv : comedyMovies;\n            break;\n          case \"fantasy\":\n            moviesArray = fantasyMovies;\n            break;\n          case \"crime\":\n            moviesArray = crimeMovies;\n            break;\n          case \"drama\":\n            moviesArray = mode === 'tv' ? dramaTv : dramaMovies;\n            break;\n          case \"documentary\":\n            moviesArray = documentaryTv;\n            break;\n          case \"mystery\":\n            moviesArray = mysteryTv;\n            break;\n          case \"animation\":\n            if (mode === 'tv') moviesArray = animationTv;\n            break;\n          default:\n            moviesArray = movies;\n            break;\n        }\n        for (let i = 0; i < moviesArray.length; i++) {\n          if (id === moviesArray[i].id) {\n            setMovieDetails({\n              active: true,\n              title: moviesArray[i].title !== undefined ? moviesArray[i].title : moviesArray[i].name,\n              poster: moviesArray[i].poster_path === null ? defaultPoster : posterPath + moviesArray[i].poster_path,\n              description: moviesArray[i].overview,\n              date: moviesArray[i].release_date,\n              rating: moviesArray[i].vote_average.toFixed(1),\n              genres: moviesArray[i].genre_ids,\n              video: videoPath,\n              dbRating: dbRating.toFixed(1),\n              dbRatingCount: dbRatingCount,\n              dbRatingTotal: dbRatingTotal,\n              reviews: reviews,\n              id: id\n            });\n            break;\n          }\n        }\n      });\n    });\n  }\n  function removeMovieDetails() {\n    setMovieDetails({\n      active: false,\n      id: null,\n      visible: false\n    });\n  }\n  function updateUserData(user) {\n    setUserData(user);\n  }\n  function updateCurrentPage(curr) {\n    setCurrentPage(curr);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      search: searchMovies,\n      toggleMode: toggleMode,\n      updateCurrentPage: updateCurrentPage,\n      mode: mode,\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), !serverConnection && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popupContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"close-icon\",\n          src: closeIcon,\n          alt: \"close icon\",\n          onClick: e => console.log(e.target).classList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Connecting to the Server and Database...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 29\n    }, this), movieDetails.visible && /*#__PURE__*/_jsxDEV(MovieDetails, {\n      hideDetails: removeMovieDetails,\n      movieDetails: movieDetails,\n      userData: userData,\n      updateCurrentPage: updateCurrentPage\n    }, movieDetails.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 32\n    }, this), currentPage === 'homepage' && mode === 'movie' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"genre-header\",\n      children: \"Action\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 64\n    }, this), currentPage === 'homepage' && mode === 'movie' && /*#__PURE__*/_jsxDEV(Caroussel, {\n      movieList: actionMoviesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 64\n    }, this), currentPage === 'homepage' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"genre-header\",\n      children: \"Comedy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 42\n    }, this), currentPage === 'homepage' && /*#__PURE__*/_jsxDEV(Caroussel, {\n      movieList: mode === 'tv' ? comedyTvList : comedyMoviesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 42\n    }, this), currentPage === 'homepage' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"genre-header\",\n      children: \"Drama\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 42\n    }, this), currentPage === 'homepage' && /*#__PURE__*/_jsxDEV(Caroussel, {\n      movieList: mode === 'tv' ? dramaTvList : dramaMoviesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 42\n    }, this), currentPage === 'homepage' && mode === 'movie' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"genre-header\",\n      children: \"Fantasy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 64\n    }, this), currentPage === 'homepage' && mode === 'movie' && /*#__PURE__*/_jsxDEV(Caroussel, {\n      movieList: fantasyMoviesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 64\n    }, this), currentPage === 'homepage' && mode === 'movie' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"genre-header\",\n      children: \"Crime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 64\n    }, this), currentPage === 'homepage' && mode === 'movie' && /*#__PURE__*/_jsxDEV(Caroussel, {\n      movieList: crimeMoviesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 64\n    }, this), currentPage === 'homepage' && mode === 'tv' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"genre-header\",\n      children: \"Animation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 61\n    }, this), currentPage === 'homepage' && mode === 'tv' && /*#__PURE__*/_jsxDEV(Caroussel, {\n      movieList: animationTvList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 61\n    }, this), currentPage === 'homepage' && mode === 'tv' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"genre-header\",\n      children: \"Documentaries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 61\n    }, this), currentPage === 'homepage' && mode === 'tv' && /*#__PURE__*/_jsxDEV(Caroussel, {\n      movieList: documentaryTvList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 61\n    }, this), currentPage === 'homepage' && mode === 'tv' && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"genre-header\",\n      children: \"Mystery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 61\n    }, this), currentPage === 'homepage' && mode === 'tv' && /*#__PURE__*/_jsxDEV(Caroussel, {\n      movieList: mysteryTvList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 61\n    }, this), currentPage === 'display' && movies.length !== 0 && /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"movies-found\",\n      children: currentSearch === 'Trending' || currentSearch === 'Upcoming' || currentSearch === 'Top rated' || currentSearch === 'Popular' ? `${currentSearch} ${mode === 'movie' ? 'Movies' : 'TV'}` : `Results for ${currentSearch}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 64\n    }, this), movies.length === 0 && currentSearch !== \"\" && currentPage === 'display' && /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"no-movies\",\n      children: [\"No results found for your search \\\"\", currentSearch, \"\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 92\n    }, this), currentPage === 'display' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-container\",\n      children: allMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 41\n    }, this), currentPage === 'signIn' && /*#__PURE__*/_jsxDEV(SignIn, {\n      updateCurrentPage: updateCurrentPage,\n      updateUserData: updateUserData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 40\n    }, this), currentPage === 'signUp' && /*#__PURE__*/_jsxDEV(SignUp, {\n      updateCurrentPage: updateCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 40\n    }, this), currentPage === 'profile' && /*#__PURE__*/_jsxDEV(Profile, {\n      updateUserData: updateUserData,\n      updateCurrentPage: updateCurrentPage,\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 464,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UBpjIQNJEMt9jHxzDMAL+H1GDq8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Movie","MovieDetails","SignIn","SignUp","Profile","apiKey","baseUrl","posterPath","defaultPoster","closeIcon","Caroussel","App","movies","setMovies","search","setSearch","mode","setMode","currentSearch","setCurrentSearch","movieDetails","setMovieDetails","active","id","visible","userData","setUserData","currentPage","setCurrentPage","loadHomepage","setLoadHomepage","actionMovies","setActionMovies","comedyMovies","setComedyMovies","comedyTv","setComedyTv","fantasyMovies","setFantasyMovies","crimeMovies","setCrimeMovies","dramaMovies","setDramaMovies","dramaTv","setDramaTv","animationTv","setAnimationTv","documentaryTv","setDocumentaryTv","mysteryTv","setMysteryTv","serverConnection","setServerConnection","i","fetch","then","res","status","json","data","console","log","results","cast","allMovies","map","movie","media_type","title","undefined","name","poster_path","getMovieCast","genre_ids","actionMoviesList","comedyMoviesList","comedyTvList","fantasyMoviesList","crimeMoviesList","dramaMoviesList","dramaTvList","animationTvList","documentaryTvList","mysteryTvList","searchMovies","text","trim","toggleMode","updateCurrentPage","movieList","videoPath","reviews","dbRating","dbRatingCount","dbRatingTotal","length","type","key","rating","ratingCount","ratingTotal","moviesArray","poster","description","overview","date","release_date","vote_average","toFixed","genres","video","removeMovieDetails","updateUserData","user","curr","e","target","classList"],"sources":["/Users/omaradhamabouzeid/Documents/JS/React/movie-app/client/src/App.jsx"],"sourcesContent":["import './App.css';\nimport {useState, useEffect} from \"react\";\nimport Header from './Header';\nimport Movie from './Movie';\nimport MovieDetails from './MovieDetails';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\nimport Profile from './Profile'\nimport {apiKey, baseUrl, posterPath} from \"./info.js\"\nimport defaultPoster from \"./media/defaultPoster.png\"\nimport closeIcon from \"./media/close-icon.png\"\nimport Caroussel from './Caroussel'\n\nfunction App() {\n\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [mode, setMode] = useState('movie');\n  const [currentSearch, setCurrentSearch] = useState(\"\");\n  const [movieDetails, setMovieDetails] = useState({active: false, id: null, visible: false});\n  const [userData, setUserData] = useState(null);\n  const [currentPage, setCurrentPage] = useState('homepage')\n  const [loadHomepage, setLoadHomepage] = useState(true)\n  const [actionMovies, setActionMovies] = useState([])\n  const [comedyMovies, setComedyMovies] = useState([])\n  const [comedyTv, setComedyTv] = useState([])\n  const [fantasyMovies, setFantasyMovies] = useState([])\n  const [crimeMovies, setCrimeMovies] = useState([])\n  const [dramaMovies, setDramaMovies] = useState([])\n  const [dramaTv, setDramaTv] = useState([])\n  const [animationTv, setAnimationTv] = useState([])\n  const [documentaryTv, setDocumentaryTv] = useState([])\n  const [mysteryTv, setMysteryTv] = useState([])\n  const [serverConnection, setServerConnection] = useState(false)\n\n\n  useEffect(() => {\n    /**\n     * Activating server by sending multiple requests when the page loads until one is resolved\n     */\n    for(let i = 0; i < 2; i++){\n      fetch('https://movieapp-rget.onrender.com/user/Omar')\n      .then(res => {\n        if(res.status === 200)\n          setServerConnection(true)\n      })\n    }\n    /*\n    Fetching movies and tv by genre to display on the homepage\n    */\n   if(loadHomepage){\n      //Action movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=28`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"Action genre\");\n        console.log(data);\n        setActionMovies(data.results);\n      });\n      // Comedy movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=35`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"comedy genre\");\n        console.log(data);\n        setComedyMovies(data.results);\n      });\n      // Comedy Tv\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=35`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"comedy genre\");\n        console.log(data);\n        setComedyTv(data.results);\n      });\n      // Comedy Tv\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=9648`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"mystery genre\");\n        console.log(data);\n        setMysteryTv(data.results);\n      });\n      // Fantasy movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=14`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"fantasy genre\");\n        console.log(data);\n        setFantasyMovies(data.results);\n      });\n      // Crime movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=80`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"crime genre\");\n        console.log(data);\n        setCrimeMovies(data.results);\n      });\n      // Drama movies\n      fetch(`${baseUrl}/discover/movie?api_key=${apiKey}&with_genres=18`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"drama genre\");\n        console.log(data);\n        setDramaMovies(data.results);\n      });\n      // Drama Tv\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=18`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"drama genre\");\n        console.log(data);\n        setDramaTv(data.results);\n      });\n      // Animation TV\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=16`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"Animation genre\");\n        console.log(data);\n        setAnimationTv(data.results);\n      });\n      // Documentary TV\n      fetch(`${baseUrl}/discover/tv?api_key=${apiKey}&with_genres=99`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"documentary genre\");\n        console.log(data);\n        setDocumentaryTv(data.results);\n      });\n      setLoadHomepage(false)\n    }\n    if(currentPage === 'trending'){\n      fetch(`${baseUrl}/trending/all/day?api_key=${apiKey}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"trending\");\n        console.log(data);\n        setMovies(data.results);\n      });\n        setCurrentSearch(\"Trending\")\n        setCurrentPage('display')    \n      }\n    else if(currentPage === 'upcoming'){\n      fetch(`${baseUrl}/${mode}/upcoming?api_key=${apiKey}&language=en-US`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"upcoming\");\n        console.log(data);\n        setMovies(data.results);\n      });\n      setCurrentSearch(\"Upcoming\")\n      setCurrentPage('display')    \n    }\n    else if(currentPage === 'topRated'){\n      fetch(`${baseUrl}/${mode}/top_rated?api_key=${apiKey}&language=en-US`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"top rated\");\n        console.log(data);\n        setMovies(data.results);\n      });\n      setCurrentSearch(\"Top rated\")\n      setCurrentPage('display')    \n    }\n    else if(currentPage === 'popular'){\n      fetch(`${baseUrl}/${mode}/popular?api_key=${apiKey}&language=en-US`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(\"popular\");\n        console.log(data);\n        setMovies(data.results);\n        \n      });\n      setCurrentSearch(\"Popular\")\n      setCurrentPage('display')    \n      \n    }\n    else if(search !== ''){\n      console.log(\"in search\")  \n      fetch(`${baseUrl}/search/${mode}?api_key=${apiKey}&language=en-US&query=${search}`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        setMovies(data.results);\n      });\n      setCurrentSearch(search)\n      setSearch(\"\")\n      setCurrentPage('display')    \n    } \n    else if(movieDetails.active){\n      fetch(`${baseUrl}/${mode}/${movieDetails.id}/credits?api_key=${apiKey}&language=en-US`)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        setMovieDetails({...movieDetails, cast: data.cast, active: false, visible: true})\n      })\n    }\n  }, [search, movieDetails, mode, currentPage, currentSearch, loadHomepage, serverConnection])\n\n    const allMovies = movies.map(movie => {\n      if (currentSearch === 'Trending'){\n        if (movie.media_type === mode){\n          return <Movie \n                    title = {movie.title !== undefined ? movie.title : movie.name}\n                    poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                    id = {movie.id}\n                    getMovieCast = {getMovieCast}\n                    key = {movie.id}\n                    genres = {movie.genre_ids}\n                    movieList = \"all\"\n                />\n        }else {\n          return ''\n        }\n      }else {\n        return <Movie \n                    title = {movie.title !== undefined ? movie.title : movie.name}\n                    poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                    id = {movie.id}\n                    getMovieCast = {getMovieCast}\n                    key = {movie.id}\n                    genres = {movie.genre_ids}\n                    movieList = \"all\"\n                />\n      } \n    });\n\n    const actionMoviesList = actionMovies.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"action\"\n              />\n    })\n\n    const comedyMoviesList = comedyMovies.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"comedy\"\n              />\n    })\n\n    const comedyTvList = comedyTv.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"comedy\"\n              />\n    })\n\n    const fantasyMoviesList = fantasyMovies.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"fantasy\"\n              />\n    })\n\n    const crimeMoviesList = crimeMovies.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"crime\"\n              />\n    })\n\n    const dramaMoviesList = dramaMovies.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"drama\"\n              />\n    })\n\n    const dramaTvList = dramaTv.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"drama\"\n              />\n    })\n    const animationTvList = animationTv.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"animation\"\n              />\n    })\n\n    const documentaryTvList = documentaryTv.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"documentary\"\n              />\n    })\n\n    const mysteryTvList = mysteryTv.map(movie => {\n      return <Movie \n                  title = {movie.title !== undefined ? movie.title : movie.name}\n                  poster = {movie.poster_path === null ? defaultPoster : posterPath + movie.poster_path}\n                  id = {movie.id}\n                  getMovieCast = {getMovieCast}\n                  key = {movie.id}\n                  genres = {movie.genre_ids}\n                  movieList = \"mystery\"\n              />\n    })\n\n  \n    function searchMovies(text){\n      if(text.trim() !== \"\")\n        setCurrentPage('search')\n        setSearch(text)\n    }\n\n    function toggleMode(){\n      if (mode === \"movie\"){\n        setMode(\"tv\")\n      } else {\n        setMode(\"movie\")\n      }\n      updateCurrentPage('trending')\n    }\n\n    function getMovieCast(id, movieList){\n      console.log(id)\n      console.log(movieList)\n      let videoPath = ''\n      let reviews = []\n      let dbRating = 0.0\n      let dbRatingCount = 0\n      let dbRatingTotal = 0\n      // Get movie trailer\n      fetch(`${baseUrl}/${mode}/${id}/videos?api_key=${apiKey}&language=en-US`)\n      .then(res => res.json())\n      .then(data => {\n        for (let i = 0; i<data.results.length; i++){\n          if (data.results[i].type === \"Trailer\"){\n            videoPath = `https://www.youtube.com/embed/${data.results[i].key}`\n            break\n          }\n        }\n        /**\n         * fetching movie reviews from the DB\n         */\n        fetch(`https://movieapp-rget.onrender.com/movies/${id}`)\n        .then(res => res.json())\n        .then(data => {\n          if(data !== null){\n            console.log(data)\n            reviews = data.reviews\n            dbRating = data.rating\n            dbRatingCount = data.ratingCount\n            dbRatingTotal = data.ratingTotal\n          }\n          // setting array to search from and fetch movie details of the clicked movie\n          let moviesArray = []\n          switch (movieList){\n            case \"action\":\n              moviesArray = actionMovies\n              break\n            case \"comedy\":\n              moviesArray = (mode === 'tv') ? comedyTv : comedyMovies\n              break\n            case \"fantasy\":\n              moviesArray = fantasyMovies\n              break\n            case \"crime\":\n              moviesArray = crimeMovies\n              break\n            case \"drama\":\n              moviesArray = (mode === 'tv') ? dramaTv : dramaMovies \n              break\n            case \"documentary\":\n              moviesArray = documentaryTv\n              break\n            case \"mystery\":\n              moviesArray = mysteryTv\n              break\n            case \"animation\":\n              if(mode === 'tv')\n                moviesArray = animationTv\n              break\n            default:\n              moviesArray = movies\n              break\n          }\n          for(let i = 0; i< moviesArray.length; i++){\n            if (id === moviesArray[i].id){\n              setMovieDetails({\n                active: true,\n                title: moviesArray[i].title !== undefined ? moviesArray[i].title : moviesArray[i].name,\n                poster: moviesArray[i].poster_path === null ? defaultPoster : posterPath + moviesArray[i].poster_path,\n                description: moviesArray[i].overview,\n                date: moviesArray[i].release_date,\n                rating: moviesArray[i].vote_average.toFixed(1),\n                genres: moviesArray[i].genre_ids,\n                video: videoPath,\n                dbRating: dbRating.toFixed(1),\n                dbRatingCount: dbRatingCount,\n                dbRatingTotal: dbRatingTotal,\n                reviews: reviews,\n                id: id})\n                break\n            }\n          }\n        })        \n      })\n    }\n\n    function removeMovieDetails(){\n      setMovieDetails({active: false, id: null, visible: false})\n    }\n\n    function updateUserData(user){\n      setUserData(user)\n    }\n\n    function updateCurrentPage(curr){\n      setCurrentPage(curr)\n    }\n\n  return (\n    <div className= \"app-container\">\n      <Header \n        search = {searchMovies}\n        toggleMode = {toggleMode}\n        updateCurrentPage = {updateCurrentPage}\n        mode = {mode}\n        userData = {userData}\n      />\n      {!serverConnection && <div className=\"popupContainer\">\n                  <div>\n                    <img className=\"close-icon\" src={closeIcon} alt=\"close icon\" onClick = {(e) => console.log(e.target).classList}></img>\n                    <p>Connecting to the Server and Database...</p>\n                  </div>\n        </div>}\n      {movieDetails.visible && <MovieDetails\n                                  hideDetails = {removeMovieDetails}\n                                  movieDetails = {movieDetails}\n                                  userData = {userData}\n                                  updateCurrentPage = {updateCurrentPage}\n                                  key = {movieDetails.id}\n                              />\n        }\n        {/* Movies and Tvs by genres */}\n\n        {(currentPage === 'homepage') && (mode === 'movie') && <h3 className=\"genre-header\">Action</h3>}                               \n        {(currentPage === 'homepage') && (mode === 'movie') && <Caroussel movieList = {actionMoviesList}/>}\n\n        {(currentPage === 'homepage') && <h3 className=\"genre-header\">Comedy</h3>}                               \n        {(currentPage === 'homepage') && <Caroussel movieList = {(mode === 'tv' ? comedyTvList : comedyMoviesList)}/>}                                 \n\n        {(currentPage === 'homepage') && <h3 className=\"genre-header\">Drama</h3>}                               \n        {(currentPage === 'homepage') && <Caroussel movieList = {(mode === 'tv' ? dramaTvList : dramaMoviesList)}/>}          \n\n        {(currentPage === 'homepage') && (mode === 'movie') && <h3 className=\"genre-header\">Fantasy</h3>}                               \n        {(currentPage === 'homepage') && (mode === 'movie') && <Caroussel movieList = {fantasyMoviesList}/>}\n\n        {(currentPage === 'homepage') && (mode === 'movie') && <h3 className=\"genre-header\">Crime</h3>}                               \n        {(currentPage === 'homepage') && (mode === 'movie') && <Caroussel movieList = {crimeMoviesList}/>}\n\n        {(currentPage === 'homepage') && (mode === 'tv') && <h3 className=\"genre-header\">Animation</h3>}                               \n        {(currentPage === 'homepage') && (mode === 'tv') && <Caroussel movieList = {animationTvList}/>} \n        \n        {(currentPage === 'homepage') && (mode === 'tv') && <h3 className=\"genre-header\">Documentaries</h3>}                               \n        {(currentPage === 'homepage') && (mode === 'tv') && <Caroussel movieList = {documentaryTvList}/>}\n                                  \n        {(currentPage === 'homepage') && (mode === 'tv') && <h3 className=\"genre-header\">Mystery</h3>}                               \n        {(currentPage === 'homepage') && (mode === 'tv') && <Caroussel movieList = {mysteryTvList}/>}\n\n\n        {/* Movies and Tvs by type (trending, upcoming, top rated, search) */}\n        {(currentPage === 'display') && movies.length !== 0 && <h2 id=\"movies-found\">{(currentSearch === 'Trending' || currentSearch === 'Upcoming' || currentSearch === 'Top rated' || currentSearch === 'Popular')\n                                                      ? `${currentSearch} ${mode === 'movie' ? 'Movies' : 'TV'}`\n                                                        :`Results for ${currentSearch}`}</h2>}\n        {(movies.length === 0) && (currentSearch !== \"\") && (currentPage === 'display') && <h2 id=\"no-movies\">No results found for your search \"{currentSearch}\"</h2>}\n        {(currentPage === 'display') && <div className=\"movies-container\">\n          {allMovies}\n        </div>}\n        {/* Sign in, sign up and profile pages */}\n        {(currentPage === 'signIn') && <SignIn \n                        updateCurrentPage = {updateCurrentPage}\n                        updateUserData = {updateUserData}/>}\n        {(currentPage === 'signUp') && <SignUp  updateCurrentPage = {updateCurrentPage}/>}\n        {(currentPage === 'profile') && <Profile \n                                          updateUserData = {updateUserData}\n                                          updateCurrentPage = {updateCurrentPage}\n                                          userData = {userData}/>}\n    </div>\n  );\n\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}