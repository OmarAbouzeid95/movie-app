{"ast":null,"code":"var _jsxFileName = \"/Users/omaradhamabouzeid/Documents/JS/React/movie-app/client/src/Profile.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Profile(props) {\n  _s();\n  const [editing, setEditing] = useState(false);\n  const [updatedInfo, setUpdatedInfo] = useState({\n    firstName: props.userData.firstName,\n    lastName: props.userData.lastName,\n    email: props.userData.email,\n    password: props.userData.password\n  });\n  const [updateStatus, setUpdateStatus] = useState('');\n  function updateUserInfo() {\n    /**\n     * Patch request to the server to update user info\n     */\n    const data = {\n      ...updatedInfo,\n      oldEmail: props.userData.email\n    };\n    console.log(data);\n    fetch(\"https://movieapp-rget.onrender.com/updateUser\", {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      if (data.result === \"success\") {\n        setUpdateStatus('success');\n        setEditing(false);\n        props.updateUserData(updatedInfo);\n      } else {\n        setUpdateStatus('Failed to update');\n      }\n    });\n  }\n  function validate() {\n    /**\n    * some validations for the signup\n    */\n    const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n    const isPassword = str => /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(str);\n    if (!isAlpha(updatedInfo.firstName) || updatedInfo.firstName.trim(' ') === '') {\n      setUpdateStatus('Enter a valid First name.');\n    } else if (!isAlpha(updatedInfo.lastName) || updatedInfo.lastName.trim(' ') === '') {\n      setUpdateStatus('Enter a valid last name.');\n    } else if (updatedInfo.email.indexOf('@') === -1 || updatedInfo.email.indexOf('.') === -1) {\n      setUpdateStatus('Enter a valid email address.');\n    } else if (!isPassword(updatedInfo.password)) {\n      setUpdateStatus( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pw-rules\",\n        children: [\"Password needs to match these rules: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 93\n        }, this), \"- Minimum eight characters \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 84\n        }, this), \"- At least one uppercase letter \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 89\n        }, this), \"- At least one lowercase letter \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 89\n        }, this), \"- One number \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 70\n        }, this), \"- One special character\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }, this));\n    }\n    // check if email has changed \n    else if (props.userData.email !== updatedInfo.email) {\n      /**\n       * Check if email already exists in the DB\n       */\n      fetch(`https://movieapp-rget.onrender.com/user/${updatedInfo.email}`).then(res => res.json()).then(data => {\n        if (data !== null) {\n          setUpdateStatus('This email is already in use.');\n        } else {\n          updateUserInfo();\n        }\n      });\n    } else {\n      updateUserInfo();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-box\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subtitle\",\n        children: \"Account details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), updateStatus !== '' && updateStatus !== 'success' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"update-failed\",\n        children: updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 81\n      }, this), updateStatus === 'success' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"update-successful\",\n        children: \"Successfully Updated!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          disabled: !editing,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            placeholder: \"First Name\",\n            value: updatedInfo.firstName,\n            onChange: e => setUpdatedInfo({\n              ...updatedInfo,\n              firstName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            placeholder: \"Last Name\",\n            value: updatedInfo.lastName,\n            onChange: e => setUpdatedInfo({\n              ...updatedInfo,\n              lastName: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"input\",\n            placeholder: \"Email\",\n            value: updatedInfo.email,\n            onChange: e => setUpdatedInfo({\n              ...updatedInfo,\n              email: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"input\",\n            placeholder: \"Password\",\n            value: updatedInfo.password,\n            onChange: e => setUpdatedInfo({\n              ...updatedInfo,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.updateUserData(null);\n          props.updateCurrentPage('signIn');\n        },\n        children: \"Sign out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), !editing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditing(true),\n        children: \"Edit profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 34\n      }, this), editing && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          validate();\n        },\n        children: \"Save changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(Profile, \"BDj1pa+JCYlLOGsBhmlJzOhJPqY=\");\n_c = Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useState","Profile","props","editing","setEditing","updatedInfo","setUpdatedInfo","firstName","userData","lastName","email","password","updateStatus","setUpdateStatus","updateUserInfo","data","oldEmail","console","log","fetch","method","headers","body","JSON","stringify","then","res","json","result","updateUserData","validate","isAlpha","str","test","isPassword","trim","indexOf","e","target","value","updateCurrentPage","preventDefault"],"sources":["/Users/omaradhamabouzeid/Documents/JS/React/movie-app/client/src/Profile.jsx"],"sourcesContent":["import {useState} from 'react'\n\nexport default function Profile(props){\n\n\n    const [editing, setEditing] = useState(false)\n    const [updatedInfo, setUpdatedInfo] = \n    useState({\n            firstName: props.userData.firstName, \n            lastName: props.userData.lastName, \n            email: props.userData.email, \n            password: props.userData.password\n            })\n    const [updateStatus, setUpdateStatus] = useState('')\n\n    function updateUserInfo(){\n        /**\n         * Patch request to the server to update user info\n         */\n        const data = {...updatedInfo, oldEmail: props.userData.email}\n        console.log(data)\n        fetch(\"https://movieapp-rget.onrender.com/updateUser\", {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n        .then(res => res.json())\n        .then(data => {\n            console.log(data)\n            if (data.result === \"success\"){\n                setUpdateStatus('success')\n                setEditing(false)\n                props.updateUserData(updatedInfo)\n            }else {\n                setUpdateStatus('Failed to update')\n            }\n        })\n    }\n\n\n    function validate(){\n\n        /**\n        * some validations for the signup\n        */\n        const isAlpha = str => /^[a-zA-Z]*$/.test(str)\n        const isPassword = str => /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(str)\n        if (!isAlpha(updatedInfo.firstName) || updatedInfo.firstName.trim(' ') === ''){\n            setUpdateStatus('Enter a valid First name.')\n        }else if(!isAlpha(updatedInfo.lastName) || updatedInfo.lastName.trim(' ') === ''){\n            setUpdateStatus('Enter a valid last name.')\n        }else if(updatedInfo.email.indexOf('@') === -1 || updatedInfo.email.indexOf('.') === -1){\n            setUpdateStatus('Enter a valid email address.')\n        }\n        else if(!isPassword(updatedInfo.password)){\n            setUpdateStatus(<span className=\"pw-rules\">Password needs to match these rules: <br></br>\n                                                        - Minimum eight characters <br></br>\n                                                        - At least one uppercase letter <br></br>\n                                                        - At least one lowercase letter <br></br>\n                                                        - One number <br></br>\n                                                        - One special character</span>)\n        }\n        // check if email has changed \n        else if(props.userData.email !== updatedInfo.email){\n            /**\n             * Check if email already exists in the DB\n             */\n            fetch(`https://movieapp-rget.onrender.com/user/${updatedInfo.email}`)\n            .then(res => res.json())\n            .then(data => {\n                if (data !== null){\n                    setUpdateStatus('This email is already in use.')\n                }else {\n                    updateUserInfo()\n                }   \n                })\n        }else {\n            updateUserInfo()\n        }\n    }\n\n\n    return (\n        <div className=\"form-box\">\n                <form className=\"form\">\n                    <span className=\"subtitle\">Account details.</span>\n                    {((updateStatus !== '') && (updateStatus !== 'success')) && <p className=\"update-failed\">{updateStatus}</p>}\n                    {(updateStatus === 'success') && <p className=\"update-successful\">Successfully Updated!</p>}\n                    <div className=\"form-container\">\n                        <fieldset disabled={!editing}>\n                            <input type=\"text\" className=\"input\"  placeholder=\"First Name\" value={updatedInfo.firstName} onChange={(e) => setUpdatedInfo({...updatedInfo, firstName: e.target.value})}></input>\n                            <input type=\"text\" className=\"input\"  placeholder=\"Last Name\"  value={updatedInfo.lastName} onChange={(e) => setUpdatedInfo({...updatedInfo, lastName: e.target.value})}></input>\n                            <input type=\"email\" className=\"input\"  placeholder=\"Email\"  value={updatedInfo.email} onChange={(e) => setUpdatedInfo({...updatedInfo, email: e.target.value})}></input>\n                            <input type=\"password\" className=\"input\"  placeholder=\"Password\" value={updatedInfo.password} onChange={(e) => setUpdatedInfo({...updatedInfo, password: e.target.value})}></input>\n                        </fieldset>\n                    </div>\n                    <button onClick={() => {\n                        props.updateUserData(null)\n                        props.updateCurrentPage('signIn')\n                        }}>Sign out</button>\n                    {!editing && <button onClick={() => setEditing(true)}>Edit profile</button>}\n                    {editing && <button onClick={(e) =>{ \n                        e.preventDefault()\n                        validate()\n                    }}>Save changes</button>} \n                </form>                \n            </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}