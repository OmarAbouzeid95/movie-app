{"ast":null,"code":"var _jsxFileName = \"/Users/omaradhamabouzeid/Documents/JS/React/movie-app/client/src/MovieDetails.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Cast from \"./Cast\";\nimport { posterPath, movieGenres } from \"./info\";\nimport unknownUser from \"./media/unknownUser.jpeg\";\nimport closeIcon from \"./media/close-icon.png\";\nimport ratingIcon from \"./media//rating-icon.png\";\nimport logo from \"./media/logo.png\";\nimport send from \"./media/send.png\";\nimport Review from './Review';\nimport filledStar from \"./media/star-filled.png\";\nimport unfilledStar from \"./media/star-unfilled.png\";\nimport deleteIcon from \"./media/delete.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieDetails(props) {\n  _s();\n  const [rating, setRating] = useState(false);\n  const [stars, setStars] = useState(0);\n  const [review, setReview] = useState('');\n  const [currentRating, setCurrentRating] = useState(props.movieDetails.dbRating);\n  const [currentReviews, setCurrentReviews] = useState(props.movieDetails.reviews);\n  let allCast = props.movieDetails.cast.map(cast => {\n    return /*#__PURE__*/_jsxDEV(Cast, {\n      name: cast.name,\n      character: cast.character,\n      poster: cast.profile_path === null ? unknownUser : posterPath + cast.profile_path\n    }, cast.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  });\n  let allGenres = '';\n  for (let i = 0; i < props.movieDetails.genres.length; i++) {\n    for (let j = 0; j < movieGenres.length; j++) {\n      if (props.movieDetails.genres[i] === movieGenres[j].id) {\n        allGenres += `${movieGenres[j].name}, `;\n        break;\n      }\n    }\n  }\n  allGenres = allGenres.substr(0, allGenres.length - 2);\n  let reviewId = 0;\n  let allReviews = currentReviews.map(review => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reviewContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Review, {\n        name: review.name,\n        comment: review.comment\n      }, reviewId++, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 49\n      }, this), props.userData !== null && review.email === props.userData.email && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"deleteReview-btn\",\n        alt: \"delete icon\",\n        src: deleteIcon,\n        onClick: () => deleteReview(review.email, review.comment, review.name, props.movieDetails.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 96\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 16\n    }, this);\n  });\n  function deleteReview(email, comment, name, movieId) {\n    /**\n     * find corresponding movie\n     */\n    fetch(`https://movieapp-rget.onrender.com/movies/${movieId}`).then(res => res.json()).then(data => {\n      // finding the index of the review and removing it from the reviews array\n      console.log(data);\n      let reviews = data.reviews;\n      const reviewIndex = reviews.findIndex(obj => obj.email === email && obj.comment === comment);\n      reviews.splice(reviewIndex, 1);\n      console.log(reviews);\n      // patching the corresponding movie details\n      fetch('https://movieapp-rget.onrender.com/movies', {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: movieId,\n          updates: {\n            reviews: reviews\n          }\n        })\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        setCurrentReviews(reviews);\n      });\n    });\n  }\n  function updateMovieDetails() {\n    /**\n     * Check if user is signed in before updating movie details\n     */\n    if (props.userData === null) {\n      /**\n       * Close the movie details page and redirect to the signIn page\n       */\n      props.hideDetails();\n      props.updateCurrentPage('signIn');\n    } else {\n      /**\n       * Check if Movie with this ID has details stored in the DB, if so then PATCH request, else it's a POST request \n       */\n      fetch(`https://movieapp-rget.onrender.com/movies/${props.movieDetails.id}`).then(res => res.json()).then(getRequestData => {\n        if (getRequestData === null) {\n          /**\n           * POST request\n           */\n          const body = {\n            movie_id: props.movieDetails.id,\n            ratingCount: stars > 0 ? 1 : 0,\n            ratingTotal: stars,\n            reviews: review.trim(' ') === '' ? [] : [{\n              name: props.userData.firstName + ' ' + props.userData.lastName,\n              email: props.userData.email,\n              comment: review.trim(' ')\n            }]\n          };\n          fetch('https://movieapp-rget.onrender.com/movies', {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          }).then(res => res.json()).then(postRequestData => {\n            console.log(postRequestData);\n            setCurrentRating(body.ratingCount > 0 ? (body.ratingTotal / body.ratingCount).toFixed(1) : 0.0);\n            setCurrentReviews(body.reviews);\n            setStars(0);\n            setReview('');\n          });\n        } else {\n          /**\n           * PATCH request\n           */\n          const dbReviews = getRequestData.reviews;\n          let dbRatingCount = getRequestData.ratingCount;\n          let dbRatingTotal = getRequestData.ratingTotal;\n          let dbRating = dbRatingTotal / dbRatingCount;\n          if (review.trim(' ') !== '') {\n            const thisReview = {\n              name: props.userData.firstName + ' ' + props.userData.lastName,\n              email: props.userData.email,\n              comment: review.trim(' ')\n            };\n            dbReviews.push(thisReview);\n          }\n          if (stars !== 0) {\n            dbRatingCount++;\n            dbRatingTotal += stars;\n            dbRating = dbRatingTotal / dbRatingCount;\n          }\n          const body = {\n            updates: {\n              reviews: dbReviews,\n              ratingCount: dbRatingCount,\n              ratingTotal: dbRatingTotal,\n              rating: dbRating\n            },\n            id: getRequestData.movie_id\n          };\n          fetch('https://movieapp-rget.onrender.com/movies', {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(body)\n          }).then(res => res.json()).then(data => {\n            console.log(data);\n            setCurrentRating(body.updates.rating.toFixed(1));\n            setCurrentReviews(body.updates.reviews);\n            setStars(0);\n            setReview('');\n          });\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"show-movie-details\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieDetails-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"close-icon\",\n        src: closeIcon,\n        alt: \"close icon\",\n        onClick: () => props.hideDetails()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDetails-title-img\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"movie-poster-dt\",\n          src: props.movieDetails.poster,\n          alt: \"movie poster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movie-details-title\",\n              children: props.movieDetails.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movie-rating\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"rating-icon\",\n                src: ratingIcon,\n                alt: \"rating-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 130\n              }, this), props.movieDetails.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 99\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"movie-rating\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"rating-icon logo-img\",\n                src: logo,\n                alt: \"rating-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 56\n              }, this), currentRating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: allGenres\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-description\",\n            children: props.movieDetails.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-date\",\n            children: props.movieDetails.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), !rating && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"rating-btn\",\n            onClick: () => setRating(true),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: unfilledStar,\n              alt: \"star icon\",\n              className: \"rating-icon rating-btn-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 100\n            }, this), \"Rate movie\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), rating && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rating-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: props.movieDetails.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"closeRating-icon\",\n            src: closeIcon,\n            alt: \"close icon\",\n            onClick: () => {\n              setRating(false);\n              setStars(0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-stars\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 1 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 2 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 3 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(3)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 4 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 5 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(5)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 6 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(6)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 7 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(7)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 8 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(8)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 9 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(9)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: stars >= 10 ? filledStar : unfilledStar,\n            alt: \"star icon\",\n            className: \"rating-star\",\n            onClick: () => setStars(10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submitRating-btn\",\n          onClick: () => {\n            updateMovieDetails();\n            setRating(false);\n          },\n          children: \"Rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), props.movieDetails.video !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDetails-video\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"650\",\n          height: \"350\",\n          src: props.movieDetails.video,\n          title: \"YouTube video player\",\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"cast-header\",\n        children: \"Cast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieDetails-cast\",\n        children: allCast\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reviews\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"reviewInput-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"reviewInput-field\",\n            placeholder: \"Write a review...\",\n            value: review,\n            onChange: e => setReview(e.target.value),\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                updateMovieDetails();\n                if (e.repeat) return;\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: send,\n            alt: \"submit review icon\",\n            className: \"submitReview-btn\",\n            onClick: () => updateMovieDetails()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this), allReviews]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetails, \"8LLJ2I6OkYYdXjv7HaUs7P+BR0k=\");\n_c = MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["useState","Cast","posterPath","movieGenres","unknownUser","closeIcon","ratingIcon","logo","send","Review","filledStar","unfilledStar","deleteIcon","MovieDetails","props","rating","setRating","stars","setStars","review","setReview","currentRating","setCurrentRating","movieDetails","dbRating","currentReviews","setCurrentReviews","reviews","allCast","cast","map","name","character","profile_path","id","allGenres","i","genres","length","j","substr","reviewId","allReviews","comment","userData","email","deleteReview","movieId","fetch","then","res","json","data","console","log","reviewIndex","findIndex","obj","splice","method","headers","body","JSON","stringify","updates","updateMovieDetails","hideDetails","updateCurrentPage","getRequestData","movie_id","ratingCount","ratingTotal","trim","firstName","lastName","postRequestData","toFixed","dbReviews","dbRatingCount","dbRatingTotal","thisReview","push","poster","title","description","date","video","e","target","value","key","repeat"],"sources":["/Users/omaradhamabouzeid/Documents/JS/React/movie-app/client/src/MovieDetails.jsx"],"sourcesContent":["import {useState} from \"react\"\nimport Cast from \"./Cast\"\nimport { posterPath, movieGenres } from \"./info\"\nimport unknownUser from \"./media/unknownUser.jpeg\"\nimport closeIcon from \"./media/close-icon.png\"\nimport ratingIcon from \"./media//rating-icon.png\"\nimport logo from \"./media/logo.png\"\nimport send from \"./media/send.png\"\nimport Review from './Review'\nimport filledStar from \"./media/star-filled.png\"\nimport unfilledStar from \"./media/star-unfilled.png\"\nimport deleteIcon from \"./media/delete.png\"\n\n\n\n\nexport default function MovieDetails(props){\n\n    const [rating, setRating] = useState(false)\n    const [stars, setStars] = useState(0)\n    const [review, setReview] = useState('')\n    const [currentRating, setCurrentRating] = useState(props.movieDetails.dbRating)\n    const [currentReviews, setCurrentReviews] = useState(props.movieDetails.reviews)\n    \n    let allCast = props.movieDetails.cast.map(cast => {\n        return <Cast\n                    name = {cast.name}\n                    character = {cast.character}\n                    poster = {cast.profile_path === null ? unknownUser : posterPath + cast.profile_path}\n                    key = {cast.id}\n                />\n    })\n    let allGenres = ''\n\n    for (let i=0; i<props.movieDetails.genres.length; i++){\n        for (let j=0; j<movieGenres.length; j++){\n            if (props.movieDetails.genres[i] === movieGenres[j].id){\n                allGenres += `${movieGenres[j].name}, `\n                break\n            }\n        }\n    }\n    allGenres = allGenres.substr(0, allGenres.length - 2)\n\n    let reviewId = 0\n    let allReviews = currentReviews.map(review => {\n        return <div className=\"reviewContainer\"><Review name = {review.name}\n                       comment = {review.comment}\n                       key = {reviewId++}/>\n                       {(props.userData !== null) &&(review.email === props.userData.email) && <img className=\"deleteReview-btn\" alt=\"delete icon\" src={deleteIcon}\n                                                                                                onClick={() => deleteReview(review.email, review.comment, review.name, props.movieDetails.id)}></img>}\n                </div>       \n    })\n\n    function deleteReview(email, comment, name, movieId){\n        /**\n         * find corresponding movie\n         */\n        fetch(`https://movieapp-rget.onrender.com/movies/${movieId}`)\n        .then(res => res.json())\n        .then(data => {\n\n            // finding the index of the review and removing it from the reviews array\n            console.log(data)\n            let reviews = data.reviews\n            const reviewIndex = reviews.findIndex(obj => (obj.email === email && obj.comment === comment))\n            reviews.splice(reviewIndex, 1)\n            console.log(reviews)\n            // patching the corresponding movie details\n            fetch('https://movieapp-rget.onrender.com/movies', {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({id:movieId ,updates: {reviews: reviews}})\n            })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                setCurrentReviews(reviews)    \n            })\n        })\n    }\n\n\n    function updateMovieDetails(){\n        /**\n         * Check if user is signed in before updating movie details\n         */\n        if(props.userData === null){\n            /**\n             * Close the movie details page and redirect to the signIn page\n             */\n            props.hideDetails()\n            props.updateCurrentPage('signIn')\n        }else {\n            /**\n             * Check if Movie with this ID has details stored in the DB, if so then PATCH request, else it's a POST request \n             */\n            fetch(`https://movieapp-rget.onrender.com/movies/${props.movieDetails.id}`)\n            .then(res => res.json())\n            .then(getRequestData => {\n                if(getRequestData === null){\n                    /**\n                     * POST request\n                     */\n                    const body = {\n                        movie_id: props.movieDetails.id,\n                        ratingCount: stars > 0 ? 1 : 0,\n                        ratingTotal: stars,\n                        reviews: review.trim(' ') === '' ? [] :\n                         [{\n                            name: props.userData.firstName + ' ' + props.userData.lastName,\n                            email: props.userData.email,\n                            comment: review.trim(' ')\n                         }]\n                    }\n                    fetch('https://movieapp-rget.onrender.com/movies', {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(body)\n                    })\n                    .then(res => res.json())\n                    .then(postRequestData => {\n                        console.log(postRequestData)\n                        setCurrentRating(body.ratingCount > 0 ? (body.ratingTotal/body.ratingCount).toFixed(1) : 0.0)\n                        setCurrentReviews(body.reviews)\n                        setStars(0)\n                        setReview('')\n                    })\n                }else {\n                    /**\n                     * PATCH request\n                     */\n                    const dbReviews = getRequestData.reviews\n                    let dbRatingCount = getRequestData.ratingCount\n                    let dbRatingTotal = getRequestData.ratingTotal\n                    let dbRating = dbRatingTotal/dbRatingCount\n                    if(review.trim(' ') !== ''){\n                        const thisReview = {\n                            name: props.userData.firstName + ' ' + props.userData.lastName,\n                            email: props.userData.email,\n                            comment: review.trim(' ')\n                        }\n                        dbReviews.push(thisReview)\n                    }\n                    if(stars !== 0){\n                        dbRatingCount++\n                        dbRatingTotal += stars\n                        dbRating = dbRatingTotal/dbRatingCount\n                    }\n                    const body = {\n                        updates: {\n                            reviews: dbReviews,\n                            ratingCount: dbRatingCount,\n                            ratingTotal: dbRatingTotal,\n                            rating: dbRating\n                        },\n                        id: getRequestData.movie_id\n                    }\n                    fetch('https://movieapp-rget.onrender.com/movies', {\n                        method: \"PATCH\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(body)\n                    })\n                    .then(res => res.json())\n                    .then(data => {\n                        console.log(data)\n                        setCurrentRating((body.updates.rating).toFixed(1))\n                        setCurrentReviews(body.updates.reviews)\n                        setStars(0)\n                        setReview('')\n                    })\n                }\n            })\n        }\n    }\n\n    return (\n        <div className=\"show-movie-details\">\n            <div className = \"movieDetails-container\">\n                <img className=\"close-icon\" src={closeIcon} alt=\"close icon\" onClick = {() => props.hideDetails()}></img>\n                <div className=\"movieDetails-title-img\">\n                    <img className=\"movie-poster-dt\" src={props.movieDetails.poster} alt=\"movie poster\"></img>\n                    <div>\n                        <p><span className=\"movie-details-title\">{props.movieDetails.title}</span><span className=\"movie-rating\"><img className=\"rating-icon\" src={ratingIcon} alt=\"rating-icon\"></img>{props.movieDetails.rating}</span>\n                        <span className=\"movie-rating\"><img className=\"rating-icon logo-img\" src={logo} alt=\"rating-icon\"></img>{currentRating}</span></p>\n                        <p>{allGenres}</p>\n                        <p className=\"movie-description\">{props.movieDetails.description}</p>\n                        <p className=\"movie-date\">{props.movieDetails.date}</p>\n                        {!rating && <button className=\"rating-btn\" onClick={() => setRating(true)}><img src={unfilledStar} alt=\"star icon\" className=\"rating-icon rating-btn-icon\"></img>Rate movie</button>}\n                    </div>\n                </div>\n                {rating &&\n                    <div className=\"rating-wrapper\">\n                        <div className=\"rating-header\">\n                        <h2>{props.movieDetails.title}</h2>\n                        <img className=\"closeRating-icon\" src={closeIcon} alt=\"close icon\" onClick = {() => {\n                            setRating(false)\n                            setStars(0)\n                            }}></img>\n                        </div>\n                        <div className=\"rating-stars\">\n                            <img src={(stars >= 1 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(1)}/>\n                            <img src={(stars >= 2 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(2)}/>\n                            <img src={(stars >= 3 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(3)}/>\n                            <img src={(stars >= 4 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(4)}/>\n                            <img src={(stars >= 5 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(5)}/>\n                            <img src={(stars >= 6 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(6)}/>\n                            <img src={(stars >= 7 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(7)}/>\n                            <img src={(stars >= 8 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(8)}/>\n                            <img src={(stars >= 9 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(9)}/>\n                            <img src={(stars >= 10 ? filledStar : unfilledStar)} alt=\"star icon\" className=\"rating-star\" onClick={() => setStars(10)}/>\n                        </div>\n                        <button className=\"submitRating-btn\" onClick={() => {\n                            updateMovieDetails()\n                            setRating(false)\n                            }}>Rate</button>\n                    </div>}\n                \n                {(props.movieDetails.video !== '') && <div className=\"movieDetails-video\">\n                    {/*eslint-disable-next-line jsx-a11y/iframe-has-title*/}\n                    <iframe width=\"650\" height=\"350\" src={props.movieDetails.video} title=\"YouTube video player\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"/>\n                </div>}\n                <h2 className=\"cast-header\">Cast</h2>\n                <div className = \"movieDetails-cast\">\n                    {allCast}\n                </div>\n                <div className=\"reviews\">\n                    <h2>Reviews</h2>\n                    <div className=\"reviewInput-wrapper\">\n                        <textarea className=\"reviewInput-field\" placeholder=\"Write a review...\" value = {review} onChange={(e) => setReview(e.target.value)} onKeyDown={(e) => {\n                                                                                                                                            if(e.key === 'Enter'){\n                                                                                                                                            updateMovieDetails()\n                                                                                                                                            if(e.repeat)\n                                                                                                                                                return\n                                                                                                                                            }}}></textarea>\n                        <img src={send} alt=\"submit review icon\" className=\"submitReview-btn\" onClick={() => updateMovieDetails()}/>\n                    </div>\n                    {allReviews}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}