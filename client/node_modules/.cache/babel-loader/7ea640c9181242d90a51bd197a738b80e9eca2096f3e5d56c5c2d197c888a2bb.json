{"ast":null,"code":"var _jsxFileName = \"/Users/omaradhamabouzeid/Documents/JS/React/movie-app/client/src/SignUp.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp(props) {\n  _s();\n  const [userInfo, setUserInfo] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    repassword: ''\n  });\n  const [signUpStatus, setSignUpStatus] = useState('');\n  function signUp() {\n    /**\n     * some validations for the signup\n     */\n    const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n    const isPassword = str => /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(str);\n    if (!isAlpha(userInfo.firstName) || userInfo.firstName.trim(' ') === '') {\n      setSignUpStatus('Enter a valid First name');\n    } else if (!isAlpha(userInfo.lastName) || userInfo.lastName.trim(' ') === '') {\n      setSignUpStatus('Enter a valid last name');\n    } else if (userInfo.email.indexOf('@') === -1 || userInfo.email.indexOf('.') === -1) {\n      setSignUpStatus('Enter a valid email address');\n    } else if (!isPassword(userInfo.password)) {\n      setSignUpStatus( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pw-rules\",\n        children: [\"Password needs to match these rules: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 93\n        }, this), \"- Minimum eight characters \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 55\n        }, this), \"- At least one uppercase letter \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 60\n        }, this), \"- At least one lowercase letter \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 60\n        }, this), \"- One number \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 41\n        }, this), \"- One special character\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 29\n      }, this));\n    } else if (userInfo.password !== userInfo.repassword) {\n      setSignUpStatus(\"Passwords don't match\");\n    } else {\n      /**\n       * Check if email already exists in the DB\n       */\n      fetch(`https://movieapp-rget.onrender.com/user/${userInfo.email}`).then(res => res.json()).then(data => {\n        if (data === null) {\n          /**\n           * Create new user by POST request\n           */\n          fetch('https://movieapp-rget.onrender.com/signUp', {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(userInfo)\n          }).then(res => res.json()).then(data => {\n            if (data.result === \"success\") {\n              setTimeout(() => {\n                props.updateCurrentPage('signIn');\n              }, 2000);\n              setSignUpStatus('success');\n            } else {\n              setSignUpStatus('Failed to sign up.');\n            }\n          });\n        } else {\n          setSignUpStatus('This email is already in use.');\n        }\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subtitle\",\n        children: \"Create a free account with your email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), signUpStatus !== '' && signUpStatus !== 'success' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signUp-failed\",\n        children: signUpStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 81\n      }, this), signUpStatus === 'success' && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"signUp-successful\",\n        children: \"Successfully Signed up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          required: true,\n          placeholder: \"First Name\",\n          onChange: e => setUserInfo({\n            ...userInfo,\n            firstName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          required: true,\n          placeholder: \"Last Name\",\n          onChange: e => setUserInfo({\n            ...userInfo,\n            lastName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"input\",\n          required: true,\n          placeholder: \"Email\",\n          onChange: e => setUserInfo({\n            ...userInfo,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input\",\n          required: true,\n          placeholder: \"Password\",\n          onChange: e => setUserInfo({\n            ...userInfo,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"input\",\n          required: true,\n          placeholder: \"Re-enter Password\",\n          onChange: e => setUserInfo({\n            ...userInfo,\n            repassword: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.preventDefault();\n          signUp();\n        },\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"signIn-btn\",\n          onClick: () => props.updateCurrentPage(\"signIn\"),\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(SignUp, \"i9RmrgACP6nDXn+C6VtOhEGk1Po=\");\n_c = SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","SignUp","props","userInfo","setUserInfo","firstName","lastName","email","password","repassword","signUpStatus","setSignUpStatus","signUp","isAlpha","str","test","isPassword","trim","indexOf","fetch","then","res","json","data","method","headers","body","JSON","stringify","result","setTimeout","updateCurrentPage","e","target","value","preventDefault"],"sources":["/Users/omaradhamabouzeid/Documents/JS/React/movie-app/client/src/SignUp.jsx"],"sourcesContent":["import {React, useState} from 'react'\n\nexport default function SignUp(props){\n    \n    const [userInfo, setUserInfo] = useState({firstName: '', lastName: '', email: '', password: '', repassword: ''})\n    const [signUpStatus, setSignUpStatus] = useState('')\n\n    function signUp(){\n        /**\n         * some validations for the signup\n         */\n        const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n        const isPassword = str => /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/.test(str)\n        if (!isAlpha(userInfo.firstName) || userInfo.firstName.trim(' ') === ''){\n            setSignUpStatus('Enter a valid First name')\n        }else if(!isAlpha(userInfo.lastName) || userInfo.lastName.trim(' ') === ''){\n            setSignUpStatus('Enter a valid last name')  \n        }else if(userInfo.email.indexOf('@') === -1 || userInfo.email.indexOf('.') === -1){\n            setSignUpStatus('Enter a valid email address')\n        }\n        else if(!isPassword(userInfo.password)){\n            setSignUpStatus(<span className=\"pw-rules\">Password needs to match these rules: <br></br>\n                           - Minimum eight characters <br></br>\n                           - At least one uppercase letter <br></br>\n                           - At least one lowercase letter <br></br>\n                           - One number <br></br>\n                           - One special character</span>)             \n        }else if(userInfo.password !== userInfo.repassword){\n            setSignUpStatus(\"Passwords don't match\")\n        }else {\n            /**\n             * Check if email already exists in the DB\n             */\n            fetch(`https://movieapp-rget.onrender.com/user/${userInfo.email}`)\n            .then(res => res.json())\n            .then(data => {\n                if (data === null){\n                    /**\n                     * Create new user by POST request\n                     */\n                    fetch('https://movieapp-rget.onrender.com/signUp', {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify(userInfo)\n                    })\n                    .then(res => res.json())\n                    .then(data => {\n                        if (data.result === \"success\"){\n                            setTimeout(() => {\n                                props.updateCurrentPage('signIn')\n                            }, 2000)\n                            setSignUpStatus('success')\n                        }else {\n                            setSignUpStatus('Failed to sign up.')\n                        }\n                    })\n                }\n                else {\n                    setSignUpStatus('This email is already in use.')\n                }\n            })\n            \n        }\n    }\n\n    return (\n        <div className=\"form-box\">\n                <form className=\"form\">\n                    <span className=\"subtitle\">Create a free account with your email.</span>\n                    {((signUpStatus !== '') && (signUpStatus !== 'success')) && <p className=\"signUp-failed\">{signUpStatus}</p>}\n                    {(signUpStatus === 'success') && <p className=\"signUp-successful\">Successfully Signed up!</p>}\n                    <div className=\"form-container\">\n                            <input type=\"text\" className=\"input\" required placeholder=\"First Name\" onChange={(e) => setUserInfo({...userInfo, firstName: e.target.value})}></input>\n                            <input type=\"text\" className=\"input\" required placeholder=\"Last Name\" onChange={(e) => setUserInfo({...userInfo, lastName: e.target.value})}></input>\n                            <input type=\"email\" className=\"input\" required placeholder=\"Email\" onChange={(e) => setUserInfo({...userInfo, email: e.target.value})}></input>\n                            <input type=\"password\" className=\"input\" required placeholder=\"Password\" onChange={(e) => setUserInfo({...userInfo, password: e.target.value})}></input>\n                            <input type=\"password\" className=\"input\" required placeholder=\"Re-enter Password\" onChange={(e) => setUserInfo({...userInfo, repassword: e.target.value})}></input>\n                    </div>\n                    <button onClick={(e) => {\n                        e.preventDefault()\n                        signUp()\n                        }}>Sign up</button>\n                </form>\n                <div className=\"form-section\">\n                    <p>Have an account? <span className=\"signIn-btn\" onClick={() => props.updateCurrentPage(\"signIn\")}>Sign in</span></p>\n                </div>\n                \n            </div> \n            )\n        }\n            \n    \n"],"mappings":";;AAAA,SAAQA,KAAK,EAAEC,QAAQ,QAAO,OAAO;AAAA;AAErC,eAAe,SAASC,MAAM,CAACC,KAAK,EAAC;EAAA;EAEjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC;IAACK,SAAS,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAE,CAAC,CAAC;EAChH,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpD,SAASY,MAAM,GAAE;IACb;AACR;AACA;IACQ,MAAMC,OAAO,GAAGC,GAAG,IAAI,aAAa,CAACC,IAAI,CAACD,GAAG,CAAC;IAC9C,MAAME,UAAU,GAAGF,GAAG,IAAI,sEAAsE,CAACC,IAAI,CAACD,GAAG,CAAC;IAC1G,IAAI,CAACD,OAAO,CAACV,QAAQ,CAACE,SAAS,CAAC,IAAIF,QAAQ,CAACE,SAAS,CAACY,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAC;MACpEN,eAAe,CAAC,0BAA0B,CAAC;IAC/C,CAAC,MAAK,IAAG,CAACE,OAAO,CAACV,QAAQ,CAACG,QAAQ,CAAC,IAAIH,QAAQ,CAACG,QAAQ,CAACW,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAC;MACvEN,eAAe,CAAC,yBAAyB,CAAC;IAC9C,CAAC,MAAK,IAAGR,QAAQ,CAACI,KAAK,CAACW,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAIf,QAAQ,CAACI,KAAK,CAACW,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAC;MAC9EP,eAAe,CAAC,6BAA6B,CAAC;IAClD,CAAC,MACI,IAAG,CAACK,UAAU,CAACb,QAAQ,CAACK,QAAQ,CAAC,EAAC;MACnCG,eAAe,eAAC;QAAM,SAAS,EAAC,UAAU;QAAA,WAAC,uCAAqC;UAAA;UAAA;UAAA;QAAA,QAAS,+BAC/C;UAAA;UAAA;UAAA;QAAA,QAAS,oCACJ;UAAA;UAAA;UAAA;QAAA,QAAS,oCACT;UAAA;UAAA;UAAA;QAAA,QAAS,iBAC5B;UAAA;UAAA;UAAA;QAAA,QAAS,2BACC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO,CAAC;IAClD,CAAC,MAAK,IAAGR,QAAQ,CAACK,QAAQ,KAAKL,QAAQ,CAACM,UAAU,EAAC;MAC/CE,eAAe,CAAC,uBAAuB,CAAC;IAC5C,CAAC,MAAK;MACF;AACZ;AACA;MACYQ,KAAK,CAAE,2CAA0ChB,QAAQ,CAACI,KAAM,EAAC,CAAC,CACjEa,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;QACV,IAAIA,IAAI,KAAK,IAAI,EAAC;UACd;AACpB;AACA;UACoBJ,KAAK,CAAC,2CAA2C,EAAE;YAC/CK,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACzB,QAAQ;UACjC,CAAC,CAAC,CACDiB,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;YACV,IAAIA,IAAI,CAACM,MAAM,KAAK,SAAS,EAAC;cAC1BC,UAAU,CAAC,MAAM;gBACb5B,KAAK,CAAC6B,iBAAiB,CAAC,QAAQ,CAAC;cACrC,CAAC,EAAE,IAAI,CAAC;cACRpB,eAAe,CAAC,SAAS,CAAC;YAC9B,CAAC,MAAK;cACFA,eAAe,CAAC,oBAAoB,CAAC;YACzC;UACJ,CAAC,CAAC;QACN,CAAC,MACI;UACDA,eAAe,CAAC,+BAA+B,CAAC;QACpD;MACJ,CAAC,CAAC;IAEN;EACJ;EAEA,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,wBACjB;MAAM,SAAS,EAAC,MAAM;MAAA,wBAClB;QAAM,SAAS,EAAC,UAAU;QAAA,UAAC;MAAsC;QAAA;QAAA;QAAA;MAAA,QAAO,EACrED,YAAY,KAAK,EAAE,IAAMA,YAAY,KAAK,SAAU,iBAAK;QAAG,SAAS,EAAC,eAAe;QAAA,UAAEA;MAAY;QAAA;QAAA;QAAA;MAAA,QAAK,EACzGA,YAAY,KAAK,SAAS,iBAAK;QAAG,SAAS,EAAC,mBAAmB;QAAA,UAAC;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAI,eAC7F;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBACvB;UAAO,IAAI,EAAC,MAAM;UAAC,SAAS,EAAC,OAAO;UAAC,QAAQ;UAAC,WAAW,EAAC,YAAY;UAAC,QAAQ,EAAGsB,CAAC,IAAK5B,WAAW,CAAC;YAAC,GAAGD,QAAQ;YAAEE,SAAS,EAAE2B,CAAC,CAACC,MAAM,CAACC;UAAK,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eACvJ;UAAO,IAAI,EAAC,MAAM;UAAC,SAAS,EAAC,OAAO;UAAC,QAAQ;UAAC,WAAW,EAAC,WAAW;UAAC,QAAQ,EAAGF,CAAC,IAAK5B,WAAW,CAAC;YAAC,GAAGD,QAAQ;YAAEG,QAAQ,EAAE0B,CAAC,CAACC,MAAM,CAACC;UAAK,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eACrJ;UAAO,IAAI,EAAC,OAAO;UAAC,SAAS,EAAC,OAAO;UAAC,QAAQ;UAAC,WAAW,EAAC,OAAO;UAAC,QAAQ,EAAGF,CAAC,IAAK5B,WAAW,CAAC;YAAC,GAAGD,QAAQ;YAAEI,KAAK,EAAEyB,CAAC,CAACC,MAAM,CAACC;UAAK,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eAC/I;UAAO,IAAI,EAAC,UAAU;UAAC,SAAS,EAAC,OAAO;UAAC,QAAQ;UAAC,WAAW,EAAC,UAAU;UAAC,QAAQ,EAAGF,CAAC,IAAK5B,WAAW,CAAC;YAAC,GAAGD,QAAQ;YAAEK,QAAQ,EAAEwB,CAAC,CAACC,MAAM,CAACC;UAAK,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS,eACxJ;UAAO,IAAI,EAAC,UAAU;UAAC,SAAS,EAAC,OAAO;UAAC,QAAQ;UAAC,WAAW,EAAC,mBAAmB;UAAC,QAAQ,EAAGF,CAAC,IAAK5B,WAAW,CAAC;YAAC,GAAGD,QAAQ;YAAEM,UAAU,EAAEuB,CAAC,CAACC,MAAM,CAACC;UAAK,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACrK,eACN;QAAQ,OAAO,EAAGF,CAAC,IAAK;UACpBA,CAAC,CAACG,cAAc,EAAE;UAClBvB,MAAM,EAAE;QACR,CAAE;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB,eACP;MAAK,SAAS,EAAC,cAAc;MAAA,uBACzB;QAAA,WAAG,mBAAiB;UAAM,SAAS,EAAC,YAAY;UAAC,OAAO,EAAE,MAAMV,KAAK,CAAC6B,iBAAiB,CAAC,QAAQ,CAAE;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA,QACnH;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEV;AAAC,GAzFe9B,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}